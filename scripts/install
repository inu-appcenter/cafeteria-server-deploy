#!/bin/bash

# Korean broken? go https://github.com/inu-appcenter/cafeteria-server-deploy

# 앱 배포를 위한 제반 시설을 설치합니다.
# 1. 암호화된 번들로부터 exports.sh, cafeteria-firebase-admin-credentials.json 파일을 추출합니다.
# 2. 날짜 스트링 지역화를 위한 full-icu를 전역적으로 설치합니다.
# 3. 스크립트를 ~/.cafeteria/bin으로 이동하고 ~/.profile을 수정하여 PATH에 추가합니다.
# 4. Nginx 설정 파일(예비용 포함)을 ~/.cafeteria/conf.d 로 복사합니다.
# 5. Systemd 데몬 파일을 /etc/systemd/system에 복사하고 서비스를 활성화합니다.
# 6. deploy를 실행합니다.

# 설치 경로는 고정입니다.
CAFETERIA_HOME=~/.cafeteria/
CAFETERIA_BIN=~/.cafeteria/bin/
CAFETERIA_CONFIGS=~/.cafeteria/conf.d/
CAFETERIA_INSTANCES=~/.cafeteria/instances/

THIS_SCRIPT_PATH="$( cd "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"

function is_already_installed() {
  if [ -d "$CAFETERIA_HOME" ]; then
    echo "Cafeteria already installed."
    read -p "Update scripts only? [Y/n]" -n 1 -r

    echo    # (optional) move to a new line

    if [[ $REPLY =~ ^[Yy]$ ]] || [ "$REPLY" == "" ]
    then
      echo "OK."
      copy_scripts
      exit 0
    else
      echo "Cancel."
      exit 1
    fi
  fi
}

function ask() {
  echo "This will install INU Cafeteria application to this server."
  read -p "Proceed? [Y/n] " -n 1 -r

  echo    # (optional) move to a new line

  if [[ $REPLY =~ ^[Yy]$ ]] || [ "$REPLY" == "" ]
  then
    echo "OK."
  else
    echo "Cancel."
    exit 1
  fi
}

function create_credential_files() {
  echo -n 'Enter master password: '
  read -r password

  # Decrypt
  echo $password | gpg --batch --yes --passphrase-fd 0 $THIS_SCRIPT_PATH/../credentials/cafeteria-firebase-admin-credentials.json.gpg &&
  echo $password | gpg --batch --yes --passphrase-fd 0 $THIS_SCRIPT_PATH/../credentials/exports.sh.gpg &&

  # Move them to $CAFETERIA_HOME/
  mv $THIS_SCRIPT_PATH/../credentials/cafeteria-firebase-admin-credentials.json $CAFETERIA_HOME/ &&
  mv $THIS_SCRIPT_PATH/../credentials/exports.sh $CAFETERIA_HOME/ &&

  echo "Created credential files."
}

function install_full_icu() {
  sudo npm install -g --unsafe-perm --silent --no-progress full-icu &&
  echo "Installed full-icu."
}

function create_directories() {
  mkdir -p $CAFETERIA_HOME &&
  mkdir -p $CAFETERIA_BIN &&
  mkdir -p $CAFETERIA_CONFIGS &&
  mkdir -p $CAFETERIA_INSTANCES &&
  echo "Created install directories."
}

function copy_scripts() {
  cp $THIS_SCRIPT_PATH/* $CAFETERIA_BIN/ &&
  echo "Copied scripts."
}

function append_path() {
  echo 'PATH="$HOME/.cafeteria/bin:$PATH"' >> ~/.profile &&

  source ~/.profile &&
  echo "Registered path."
}

function copy_nginx_configs() {
  cp "$THIS_SCRIPT_PATH"/../conf.d/* $CAFETERIA_CONFIGS/ &&
  echo "Copied nginx configs."
}

function copy_systemd_script() {
  sudo cp $THIS_SCRIPT_PATH/../systemd/cafeteria.service /etc/systemd/system/
  echo "Copied systemd script."

  sudo systemctl daemon-reload
  sudo systemctl enable cafeteria.service
}

function execute_deploy() {
  echo "Deploying app..." &&
  deploy &&
  echo "Deployed app."
}

function completed() {
  echo "Installation & deployment successfully completed." &&
  echo "Please type 'source ~/.profile' in your shell to use server commands."
}

function failure() {
  echo "Installation failed!"
}

is_already_installed &&
ask &&
create_credential_files &&
install_full_icu &&
create_directories &&
copy_scripts &&
append_path &&
copy_nginx_configs &&
copy_systemd_script &&
execute_deploy &&
completed || failure
