#!/bin/bash

# Korean broken? go https://github.com/inu-appcenter/cafeteria-server-deploy

# 저장소로부터 앱을 다운로드하고 nginx 설정을 교체합니다.

REPO=https://github.com/inu-appcenter/cafeteria-server.git

CAFETERIA_CONFIGS=~/.cafeteria/conf.d/
CAFETERIA_INSTANCES=~/.cafeteria/instances/

function is_installed() {
  if [ ! -d "$CAFETERIA_HOME" ]; then
    echo "Cafeteria not installed. Please install and try again."
    exit 1
  fi
}

function choose_which_instance_to_use() {
  RUNNING_INSTANCE=$(enabled-instance)

	if [ "$RUNNING_INSTANCE" == "instanceA" ]; then
		$NEW_INSTANCE="instanceB"
	elif [ "$RUNNING_INSTANCE" == "instanceB" ]; then
    $NEW_INSTANCE="instanceA"
	else
    $NEW_INSTANCE="instanceA"
	fi

	echo "$NEW_INSTANCE will be deployed."
}

function choose_which_port_to_kill() {
  RUNNING_PORT=$(enabled-port)

  echo "Port $RUNNING_PORT will be freed."
}

function download_and_install_app() {
  rm -rf $CAFETERIA_INSTANCES/$NEW_INSTANCE &&
  echo "Purged target instance directory." &&
  git clone $REPO $CAFETERIA_INSTANCES/$NEW_INSTANCE > /dev/null &&
  echo "App downloaded." &&
  cd $CAFETERIA_INSTANCES/$NEW_INSTANCE &&
  npm install > /dev/null &&
  echo "Dependencies installed."
}

function swap_nginx_config_and_reload() {
  sudo rm -f /etc/nginx/conf.d/cafeteria*.conf &&
  sudo cp $CAFETERIA_CONFIGS/cafeteria_$NEW_INSTANCE.conf /etc/nginx/conf.d/ &&
  sudo systemctl reload nginx &&
  echo "Nginx reloaded."
}
