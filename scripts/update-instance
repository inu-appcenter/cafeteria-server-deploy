#!/bin/bash

# Korean broken? go https://github.com/inu-appcenter/cafeteria-server-deploy

# 지정된 인스턴스를 종료 후 업데이트합니다.
# 지정되지 않을 경우 현재 활성화되지 않은(nginx에 연결되지 않은) 인스턴스를 종료 후 업데이트합니다.
# 업데이트된 인스턴스는 자동으로 다시 실핼되지 않습니다.

REPO=https://github.com/inu-appcenter/cafeteria-server.git

CAFETERIA_INSTANCES=~/.cafeteria/instances/

function usage() {
  echo "Usage: update-instance [A|B|instanceA|instanceB](optional)"
  exit 1
}

function determine_which_instance_to_update() {
  if [ $# -eq 0 ]; then
    target_instance_name=$(disabled-instance)
    target_instance_port=$(disabled-port)
  elif [ "$1" == "A" ] || [ "$1" == "instanceA" ]; then
    target_instance_name="instanceA"
    target_instance_port="20201"
  elif [ "$1" == "B" ] || [ "$1" == "instanceB" ]; then
    target_instance_name="instanceB"
    target_instance_port="20202"
  else
    usage
  fi
}

function ask() {
  in_service=$(enabled-instance)

  echo "Instance in service: $in_service"
  echo "Target instance to update: $target_instance_name"

  if [ "$in_service" == "$target_instance_name" ]; then
    echo "** Danger: this update will stop the instance in service. **"
  fi

  read -p "Proceed? [y/N] " -n 1 -r

  echo    # (optional) move to a new line

  if [[ $REPLY =~ ^[Yy]$ ]]
  then
    echo "OK."
  else
    echo "Cancel."
    exit 1
  fi
}

function kill_target_instance() {
  fuser -n tcp -k $target_instance_port

  echo "Killed old version of app running on $target_instance_name"
}

function download_and_install_app() {
  rm -rf $CAFETERIA_INSTANCES/$target_instance_name &&
  echo "Purged target instance directory." &&

  git clone $REPO $CAFETERIA_INSTANCES/$target_instance_name > /dev/null &&
  echo "Downloaded app." &&

  cd $CAFETERIA_INSTANCES/$target_instance_name &&
  npm install > /dev/null &&
  echo "Installed dependencies."
}

function completed() {
  echo "$target_instance_name successfully updated."
}

determine_which_instance_to_update $@ &&
ask &&
kill_target_instance &&
download_and_install_app &&
completed
